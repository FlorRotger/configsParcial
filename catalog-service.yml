server:
  port: 0

spring:
  application:
    name: catalog-service
  mongodb:
    embedded:
      version: 4.0.2
    data:
      mongodb:
        database: test
        port: 27018
  sleuth:
    sampler:
      probability: 1.0
  rabbitmq:
    username: guest
    password: guest
    host: localhost
    port: 5672
  zipkin:
    baseUrl: http://localhost:9411/
    enabled: true


queue:
  serie:
    name: serieQueue
  movie:
    name: movieQueue

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    registry-fetch-interval-seconds: 5
    healthcheck:
      enabled: true
    service-url:
      default-zone: http://localhost:8761/eureka
  instance:
    hostname: localhost
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
    prefer-ip-address: true
    lease-renewal-interval-in-seconds: 5
    lease-expiration-duration-in-seconds: 10

management:
  endpoints:
    web:
      exposure:
        include: '*'
  health:
    circuitbreakers:
      enabled: true
  endpoint:
    health:
      show-details: always

resilience4j:
  circuitbreaker:
    instances:
      students:
        #        slidingWindowType: COUNT_BASED
        #        slidingWindowSize: 5
        #        failureRateThreshold: 50
        #        waitDurationInOpenState: 15000
        #        permittedNumberOfCallsInHalfOpenState: 3
        #        registerHealthIndicator: true
        #        allowHealthIndicatorToFail: false
        #        automaticTransitionFromOpenToHalfOpenEnabled: true

        slidingWindowType: COUNT_BASED
        slidingWindowSize: 5
        failureRateThreshold: 50
        #        tiempo de espera en milisegundos en estado abierto
        waitDurationInOpenState: 15000
        #        para ver si el servicio se recuperó, le voy a decir, esperá 3 llamadas para poder decir, pasalo a estado cerrado
        permittedNumberOfCallsInHalfOpenState: 3
        #        vamos a definir que hacemos con el estado del servicio cuando se abrio
        #        esto esa para ver la informacion del servicio en actuator
        registerHealthIndicator: true
        #        aca le decimos marca el servicio como down q no lo pueda ver nadie, esta en false porque tenemos q ver
        #         como pasamos el serv a up
        allowHealthIndicatorToFail: false
        automaticTransitionFromOpenToHalfOpenEnabled: true